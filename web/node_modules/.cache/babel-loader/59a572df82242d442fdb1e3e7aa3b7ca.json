{"ast":null,"code":"var _jsxFileName = \"/home/desi/\\xC1rea de Trabalho/assignment/web/src/views/Task/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport * as S from './styles';\nimport { format } from 'date-fns';\nimport api from '../../services/api';\nimport isConnected from '../../utils/isConnected'; //NOSSOS COMPONENTES\n\nimport Header from '../../components/Header';\nimport Footer from '../../components/Footer';\nimport TypeIcons from '../../utils/typeIcons';\nimport iconCalendar from '../../assets/calendar.png';\nimport iconClock from '../../assets/clock.png';\n\nfunction Task({\n  match\n}) {\n  const [redirect, setRedirect] = useState(false);\n  const [type, setType] = useState(); //const [id, setId] = useState();\n\n  const [done, setDone] = useState(false);\n  const [title, setTitle] = useState();\n  const [description, setDescription] = useState();\n  const [date, setDate] = useState();\n  const [hour, setHour] = useState();\n\n  async function LoadTaskDetails() {\n    await api.get(`/task/${match.params.id}`).then(response => {\n      setType(response.data.type);\n      setDone(response.data.done);\n      setTitle(response.data.title);\n      setDescription(response.data.description);\n      setDate(format(new Date(response.data.when), 'yyyy-MM-dd'));\n      setHour(format(new Date(response.data.when), 'HH:mm'));\n    });\n  }\n\n  async function Save() {\n    //Validação dos dados\n    if (!title) return alert(\"Você precisa informar o título da terefa\");else if (!description) return alert(\"Você precisa informar a descrição da terefa\");else if (!type) return alert(\"Você precisa selecionar o tipo da terefa\");else if (!date) return alert(\"Você precisa definir a data da terefa\");else if (!hour) return alert(\"Você precisa definir a hora da terefa\");\n\n    if (match.params.id) {\n      await api.put(`/task/${match.params.id}`, {\n        macaddress: isConnected,\n        done,\n        type,\n        title,\n        description,\n        when: `${date}T${hour}:00.000`\n      }).then(() => setRedirect(true));\n    } else {\n      await api.post('/task', {\n        macaddress: isConnected,\n        type,\n        title,\n        description,\n        when: `${date}T${hour}:00.000`\n      }).then(() => setRedirect(true)).catch(response => {\n        alert(response.data.error);\n      });\n    }\n  }\n\n  async function Remove() {\n    const res = window.confirm('Deseja realmente remover a tarefa?');\n\n    if (res === true) {\n      await api.delete(`/task/${match.params.id}`).then(() => setRedirect(true));\n    }\n  }\n\n  useEffect(() => {\n    if (!isConnected) setRedirect(true);\n    LoadTaskDetails();\n  }, []);\n  return /*#__PURE__*/React.createElement(S.Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }, redirect && /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(S.Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(S.TypeIcons, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, TypeIcons.map((icon, index) => index > 0 && /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => setType(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: icon,\n    alt: \"Tipo da Tarefa\",\n    className: type && type !== index && 'inative',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(S.Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, \"T\\xEDtulo\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"T\\xEDtulo da terefa...\",\n    onChange: e => setTitle(e.target.value),\n    value: title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(S.TextArea, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }, \"Descri\\xE7\\xE3o\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    rows: 5,\n    placeholder: \"Detalhes da tarefa...\",\n    onChange: e => setDescription(e.target.value),\n    value: description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(S.Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }, \"Data\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    placeholder: \"T\\xEDtulo da terefa...\",\n    onChange: e => setDate(e.target.value),\n    value: date,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: iconCalendar,\n    alt: \"Calend\\xE1rio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(S.Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }, \"Hora\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"time\",\n    placeholder: \"T\\xEDtulo da terefa...\",\n    onChange: e => setHour(e.target.value),\n    value: hour,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: iconClock,\n    alt: \"Rel\\xF3gio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(S.Options, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: done,\n    onChange: () => setDone(!done),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, \"CONCLU\\xCDDO\")), match.params.id && /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: Remove,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 30\n    }\n  }, \"EXCLUIR\")), /*#__PURE__*/React.createElement(S.Save, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: Save,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }\n  }, \"SALVAR\"))), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Task;","map":{"version":3,"sources":["/home/desi/Área de Trabalho/assignment/web/src/views/Task/index.js"],"names":["React","useState","useEffect","Redirect","S","format","api","isConnected","Header","Footer","TypeIcons","iconCalendar","iconClock","Task","match","redirect","setRedirect","type","setType","done","setDone","title","setTitle","description","setDescription","date","setDate","hour","setHour","LoadTaskDetails","get","params","id","then","response","data","Date","when","Save","alert","put","macaddress","post","catch","error","Remove","res","window","confirm","delete","map","icon","index","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {Redirect} from 'react-router-dom'\nimport * as S from './styles';\nimport {format} from 'date-fns';\n\nimport api from '../../services/api';\nimport isConnected from '../../utils/isConnected';\n\n//NOSSOS COMPONENTES\nimport Header from '../../components/Header';\nimport Footer from '../../components/Footer';\nimport TypeIcons from '../../utils/typeIcons';\n\nimport iconCalendar from '../../assets/calendar.png';\nimport iconClock from '../../assets/clock.png';\n\nfunction Task({match}) {\n  const [redirect, setRedirect] = useState(false);\n  const [type, setType] = useState();\n  //const [id, setId] = useState();\n  const [done, setDone] = useState(false);\n  const [title, setTitle] = useState();\n  const [description, setDescription] = useState();\n  const [date, setDate] = useState();\n  const [hour, setHour] = useState();\n  \n\n  async function LoadTaskDetails(){\n    await api.get(`/task/${match.params.id}`)\n    .then(response => {\n      setType(response.data.type)\n      setDone(response.data.done)\n      setTitle(response.data.title)\n      setDescription(response.data.description)\n      setDate(format(new Date(response.data.when), 'yyyy-MM-dd'))\n      setHour(format(new Date(response.data.when), 'HH:mm'))\n    })\n  }\n\n  async function Save(){\n    //Validação dos dados\n    if(!title)\n      return alert(\"Você precisa informar o título da terefa\")\n    else if(!description)\n      return alert(\"Você precisa informar a descrição da terefa\")\n    else if(!type)\n      return alert(\"Você precisa selecionar o tipo da terefa\")\n    else if(!date)\n      return alert(\"Você precisa definir a data da terefa\")\n    else if(!hour)\n      return alert(\"Você precisa definir a hora da terefa\")\n\n\n\n    if(match.params.id){\n      await api.put(`/task/${match.params.id}`, {\n        macaddress: isConnected,\n        done,\n        type,\n        title,\n        description,\n        when: `${date}T${hour}:00.000`\n      }).then(() => \n        setRedirect(true)\n      )\n\n    }else{\n      await api.post('/task', {\n        macaddress: isConnected,\n        type,\n        title,\n        description,\n        when: `${date}T${hour}:00.000`\n      }).then(() => \n          setRedirect(true)\n      ).catch(response => {\n        alert(response.data.error)\n      })\n    }\n  }\n\n  async function Remove(){\n    const res = window.confirm('Deseja realmente remover a tarefa?')\n    if(res === true){\n      await api.delete(`/task/${match.params.id}`)\n      .then(() => setRedirect(true));\n    }\n  }\n\n\n  useEffect(() => {\n    if(!isConnected)\n      setRedirect(true);\n    LoadTaskDetails();\n  }, [])\n\n  return (\n    <S.Container>\n      { redirect && <Redirect to=\"/\" /> }\n      <Header />    \n\n      <S.Form>\n        <S.TypeIcons>\n          {\n            TypeIcons.map((icon, index) => (\n             index > 0 && \n             <button type=\"button\" onClick={() => setType(index)}>\n                <img src={icon} alt=\"Tipo da Tarefa\" \n                className={type && type !== index && 'inative'}/>\n             </button>\n            ))\n          }\n        </S.TypeIcons>\n\n        <S.Input>\n          <span>Título</span>\n          <input type=\"text\" placeholder=\"Título da terefa...\" \n          onChange={e => setTitle(e.target.value)} value={title} />\n        </S.Input>\n\n        <S.TextArea>\n          <span>Descrição</span>\n          <textarea rows={5} placeholder=\"Detalhes da tarefa...\" \n          onChange={e => setDescription(e.target.value)} value={description}/>\n        </S.TextArea>\n\n        <S.Input>\n          <span>Data</span>\n          <input type=\"date\" placeholder=\"Título da terefa...\" \n          onChange={e => setDate(e.target.value)} value={date} />\n          <img src={iconCalendar} alt=\"Calendário\"/>\n        </S.Input>\n\n        <S.Input>\n          <span>Hora</span>\n          <input type=\"time\" placeholder=\"Título da terefa...\" \n          onChange={e => setHour(e.target.value)} value={hour}/>\n          <img src={iconClock} alt=\"Relógio\"/>\n        </S.Input>\n\n        <S.Options>\n          <div>\n            <input type=\"checkbox\" checked={done} onChange={() => setDone(!done)}/>\n            <span>CONCLUÍDO</span>\n          </div>\n        { match.params.id && <button type=\"button\" onClick={Remove}>EXCLUIR</button> }\n        </S.Options>\n\n        <S.Save>\n          <button type=\"button\" onClick={Save}>SALVAR</button>\n        </S.Save>\n\n\n\n      </S.Form>\n\n\n\n      <Footer/>\n    </S.Container>\n  )\n}\n\nexport default Task;\n"]},"metadata":{},"sourceType":"module"}